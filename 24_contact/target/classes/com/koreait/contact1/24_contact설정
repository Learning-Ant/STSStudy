24_contact 설정

1. 버전최신화를 진행

2. lombok dependency 추가

3. web.xml에 인코딩을 추가한다.

4. mvcrepository에서 spring-jdbc dependency 추가

5. root-context.xml에 JdbcTemplate template Bean을 정의해 둔다.
	(Servers에 등록한 context.xml의 설정을 사용하지 않겠다는 의미이다.)
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="spring" />
		<property name="password" value="1111" />
	</bean>
	<bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
6. common 패키지에 JdbcTemplate template을 선언해 둔다.
	(controller, dao에서 공동으로 사용할 수 있도록)
	
	public class SpringJdbc {
		public static JdbcTemplate template;
	} 

7. controller에서 @Autowired를 이용해서 JdbcTemplate template을 생성한다.
	(생성된 template은 controller에서도 사용하고, common 패키지의 SpringJdbc 클래스에 등록해 둔다.)
	
	public class ContactController {
		@Autowired
		public void setTmeplate(JdbcTemplate template) {
			SpringJdbc.template = template;
		}
	}